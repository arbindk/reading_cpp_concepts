Given two strings of lowercase alphabets and a value K, your task is to complete the given function which tells if  two strings are K-anagrams of each other or not.

Two strings are called K-anagrams if both of the below conditions are true.
1. Both have same number of characters.
2. Two strings can become anagram by changing at most K characters in a string.

Example:

Input: str1 = "fodr", str2="gork"
k = 2
Output:
1
Explanation: Can change fd to gk

=============================================================
bool areKAnagrams(string str1, string str2, int k) {
        // code here
        int n=str1.length();
       int m=str2.length();
       if(n!=m){
           return false;
       }
       int hash1[26]={0};
       int hash2[26]={0};
       int count=0;
       for(int i=0;i<n;i++){
           hash1[str1[i]-'a']++;
           hash2[str2[i]-'a']++;
       }
       for(int i=0;i<26;i++){
           if(hash1[i]!=hash2[i]){
               count+=(max(hash1[i],hash2[i])-min(hash1[i],hash2[i]));
           }
       }
       count=count/2;
       if(count>k){
               return false;
           }
       return true;
}
